% \iffalse meta-comment
% 
% abbrev.ins
% 
% Copyright (C) 2013, 2017 by Thai Son Hoang <T dot S dot Hoang at ecs dot soton dot ac dot uk>
% --------------------------------------------------------------------
% 
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in:
% 
%      http://www.latex-project.org/lppl.txt
% 
% and version 1.3 or later is part of all distributions of LaTeX 
% version 2003/12/01 or later.
% 
% This work has the LPPL maintenance status "author-maintained".
% 
% This work consists of the files abbrev.dtx, abbrev.ins,
% the derived file abbrev.sty, the generated documentation
% abbrev.pdf, and some sample requirements documents.
% 
% \fi
% 
% \iffalse
%<abbrev>\NeedsTeXFormat{LaTeX2e}\relax
%<abbrev>\ProvidesPackage{abbrev}
%<abbrev>    [2017/05/16 v1.1 Package for typesetting abbreviations] 
% 
%<*driver> 
\documentclass[a4paper]{ltxdoc}
\usepackage{abbrev}
\EnableCrossrefs
% ^^A\CodelineIndex
\PageIndex
\RecordChanges

\begin{document}
\DocInput{abbrev.dtx}
\end{document}
%</driver>
% \fi
% 
% \CheckSum{0}
% 
% \CharacterTable
% {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
% Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
% Digits        \0\1\2\3\4\5\6\7\8\9
% Exclamation   \!     Double quote  \"     Hash (number) \#
% Dollar        \$     Percent       \%     Ampersand     \&
% Acute accent  \'     Left paren    \(     Right paren   \)
% Asterisk      \*     Plus          \+     Comma         \,
% Minus         \-     Point         \.     Solidus       \/
% Colon         \:     Semicolon     \;     Less than     \<
% Equals        \=     Greater than  \>     Question mark \?
% Commercial at \@     Left bracket  \[     Backslash     \\
% Right bracket \]     Circumflex    \^     Underscore    \_
% Grave accent  \`     Left brace    \{     Vertical bar  \|
% Right brace   \}     Tilde         \~}
% 
% 
% \changes{v1.0}{2013/04/22}{Initial version}
% \changes{v1.1}{2017/05/16}{Added command to address plural version of abbreviations}
% 
% \GetFileInfo{abbrev.sty}
% 
% \DoNotIndex{\\}
% \DoNotIndex{\DeclareOption}
% \DoNotIndex{\ProcessOptions}
% \DoNotIndex{\RequirePackage}
% \DoNotIndex{\arabic}
% \DoNotIndex{\begin}
% \DoNotIndex{\csname,\csuse}
% \DoNotIndex{\def,\do,\dolistloop}
% \DoNotIndex{\end,\endcsname,\expandafter}
% \DoNotIndex{\hline}
% \DoNotIndex{\ifstrequal,\iftoggle,\item}
% \DoNotIndex{\label,\labelformat,\listadd}
% \DoNotIndex{\medskip}
% \DoNotIndex{\newcommand,\newcounter,\newenvironment,\newtoggle,\nomenclature}
% \DoNotIndex{\quad}
% \DoNotIndex{\renewcommand,\renewenvironment,\ref,\refstepcounter}
% \DoNotIndex{\setcounter,\small}
% \DoNotIndex{\textsf,\textwidth,\togglefalse,\toggletrue}
% \DoNotIndex{\value}
% \DoNotIndex{\xspace}
%
% \title{The \textsf{abbrev} package\thanks{This document
% corresponds to \textsf{abbrev}~\fileversion, dated~\filedate.}}
% \author{Thai Son Hoang \\ ECS, University of Southampton \\ \texttt{<T dot S dot Hoang at ecs dot
% soton dot ac dot uk>}}
% \date{May 16, 2017}
% 
% \maketitle
% 
% ^^A %%%%% Abstract %%%%%
% \begin{abstract}
%   This package provides macros for typesetting abbreviations.  It
%   was developed initially at the Swiss Federal Institute of Technology Zurich
%   (ETH-Zurich) and subsequently at the University of Southampton.
% \end{abstract}
% 
% ^^A %%%%% Table of contents %%%%%
% \tableofcontents
% 
% ^^A %%%%% Introduction %%%%%
% \section{Introduction}
% 
% This package was developed in order to ease the typesetting of
% abbreviations in \LaTeX{}.  Each abbreviation is associated with a
% set of macros for typesetting.  Abbreviations are collected and can
% be displayed in list of abbreviations by making use of package
% |nomencl|.
% 
% ^^A %%%%% Usage %%%%%%
% \section{Usage}
% 
% ^^A %%% Package option |compact| %%%
% Just like any other package, you need to request this package with a
% |\usepackage| command in the preamble.
%
% So in the simpler case, one just types
% 
% \indent |\usepackage{abbrev}|
%
% \noindent to load the package  
%
% The rest of this section is to give descriptions of the main
% (meta-)macro for creating abbreviation macros and their expected
% behaviour.
% 
% \subsection{Creating Abbreviations}
% ^^A %%% \newabbrev macros %%%
% \DescribeMacro{\newabbrev}
% Macro |\newabbrev| is a meta-macro that creating several
% abbreviation macros.  The signature of |\newabbrev| is as follows.
%
% \indent |\newabbrev|\oarg{csname}\marg{abbreviation}\marg{expansion string}
%
% \indent \hspace{2em}{\marg{plural-csname}} {\marg{plural-abbreviation}{\marg{plural-expansion-string}}
%
% The first optional argument |csname| is the \emph{control sequence} name that
% will be use to create the abbreviation macro, i.e., the marco will be |\csname|.
%  If the first optional argument is omitted, the second argument representing the
% |abbreviation| will be used as the control sequence.  The third
% argument is the \emph{full expansion string} of for the abbreviation.
% A plural macro for the abbreviation is also created. By default, the plural control
% sequence name, the plural abbreviation and the plural expansion string
% correspond to singular version with an additional |s|.  In the case where it should
% be defined differently, it can be declared as the additional argument |plural-csname|,
% |plural-abbreviation|, |plural-expansion-string|.
% 
% An invocation of the above |\newabbrev| with control sequence
% |csname| will create the following macros:
% \begin{itemize}
% \item |\csname|: Singular version of the abbreviation macro.
% \item |\csnames|: Plural version of the abbreviation macro (with an additional |s|).
% \end{itemize}
% 
% First time usage of |\csname| will be replaced by ``full string
% (abbreviation)''.  Subsequent uses of |\csname| will be replaced by
% ``abbreviation''. Macro |\csnames| is the plural version macro.
%
% \subsection{Resetting Abbreviations}
% \DescribeMacro{\resetabbrev}
% The above expansion behaviour can be reset by calling
% |\resetallabbrev|.  Afterwards, |\csname| and |\csnames| will be
% expanded the first time that they are used.  Individual abbreviation |\csname|
% can be reset by |\resetabbrev{csname}| (Here |csname| is the control sequence 
% corresponding to the singular version of the macro.
% 
% More information can be found in the accompanying sample document.
%
% \subsection{Creating a List of Abbreviations}
% The list of abbreviations can be created by making use of package
% |nomencl|.  Typically, one includes the following in the document
% preamble.
% 
% \indent |\usepackage{nomencl}|
%
% \indent |\renewcommand{\nomname}{List of Abbreviations}|
%
% \indent |\makenomenclature|
%
% \noindent The following command from |nomencl| is used print the list
% of abbreviations.
%
% \indent |\printnomenclature|
%
% Finally, use |makeindex| to compile and generate the list of
% abbreviations appropriately.
%
% \indent |makeindex filename.nlo  -s nomencl.ist -o filename.nls|
%
% where |filename| is the name of the main .tex file.
%
% \StopEventually{
% \PrintChanges
% \PrintIndex
% }
%   
% ^^A %%%%% Implementation %%%%%
% \section{Implementation}
%
% ^^A %%% Package loading %%% 
% The implementation is quite straightforward.  We first request the
% |etoolbox| package for implementation purpose, |xspace| for
% utilising the spacing, and |nomencl| for creating list of
% abbreviations.
% 
% \iffalse ^^A BEGIN Produce comments only in the resulting style file
%<abbrev>
%<abbrev>%%%%% BEGIN Package loading %%%%%
% \fi ^^A END Produce comments only in the resulting style file
%
%    \begin{macrocode}
\RequirePackage{etoolbox}
\RequirePackage{xspace}
\RequirePackage{nomencl}
%    \end{macrocode}
%
% \iffalse ^^A BEGIN Produce comments only in the resulting style file
%<abbrev>%%%%% END Package loading %%%%%
%<abbrev>
% \fi ^^A END Produce comments only in the resulting style file
%
% \begin{macro}{\newabbrev}
%   \changes{v1.0}{2013/04/22}{Macro created}
%   \changes{v1.1}{2017/05/16}{Change the implement to use newfullabbrev}
%   The |newabbrev| makes use of the worker macro |newfullabbrev| for
%   creating abbreviations macros.
% 
% \iffalse^^A BEGIN Produce comments only in the resulting style file
%<*abbrev>

% Meta-macro to create abbreviation macros.
%
% Arguments:
% 1. (Optional) String to be used as macro
% 2. The abbreviation (also used as the macro if the optional argument
%    is empty)
% 3. The full string expansion.
%
% Usage:
% - \newabbrev{SME}{Small and Medium-sized Enterprise} will create
% macros \SME will expand as Small and Medium-sized Enterprise (SME)
% and \SMEs will expand as Small and Medium-sized Enterprises (SMEs).
% - \newabbrev[randd]{R\&D}{Research and Development} will create
% macros \randd will expand as Research and Development (R\&D)
% and \randds will expand as Research and Developments (R\&Ds).
%</abbrev>
% \fi^^A END Produce comments only in the resulting style file
%    \begin{macrocode}
\newcommand{\newabbrev}[3][]{%
  \newfullabbrev[#1]{#2}{#3}{}{}{}
}

%    \end{macrocode}
% \end{macro} ^^A \newabbrev
%
% \begin{macro}{\newfullabbrev}
%   \changes{v1.1}{2017/05/16}{Macro created}
%   The |newfullabbrev| makes use of the worker macro |abbrev@create| for
%   creating abbreviations macros.
% 
% \iffalse^^A BEGIN Produce comments only in the resulting style file
%<*abbrev>

% Meta-macro to create abbreviation macros.
%
% Arguments:
% 1. (Optional) String to be used as macro
% 2. The abbreviation (also used as the macro if the optional argument
%    is empty)
% 3. The full string expansion.
% 4. The control sequence for plural version (empty to use the s-suffix singular version)
% 5. The plural abbreviation (empty to use the s-suffix singular version)
% 6. The plural expansion string (empty to use the s-suffix singular version)
%
% Usage:
% - \newfullabbrev{SME}{Small and Medium-sized Enterprise}{}{}{} will create
% macros \SME will expand as Small and Medium-sized Enterprise (SME)
% and \SMEs will expand as Small and Medium-sized Enterprises (SMEs).
% - \newfullabbrev[randd]{R\&D}{Research and Development}{}{}{} will create
% macros \randd will expand as Research and Development (R\&D)
% and \randds will expand as Research and Developments (R\&Ds).
% - \newfullabbrev{AS}{Autonomous System}{ASes}{ASes}{} will create
% macros \AS will expand as Autonomous System (AS) 
% and \ASes will expand as Autonomous Systems (ASes).
%</abbrev>
% \fi^^A END Produce comments only in the resulting style file
%    \begin{macrocode}
\newcommand{\newfullabbrev}[6][]{%
  \expandafter\ifstrequal\expandafter{#1}{}{
    \def\abbrev@sgcsname{#2}
  }{
    \def\abbrev@sgcsname{#1}
  }
  \def\abbrev@sgabbrev{#2}
  \def\abbrev@sgexpn{#3}

  \expandafter\ifstrequal\expandafter{#4}{}{
    \edef\abbrev@plcsname{\abbrev@sgcsname s}
  }{
    \def\abbrev@plcsname{#4}
  }

  \expandafter\ifstrequal\expandafter{#5}{}{
    \edef\abbrev@plabbrev{\abbrev@sgabbrev s}
  }{
    \def\abbrev@plabbrev{#5}
  }

  \expandafter\ifstrequal\expandafter{#6}{}{
    \edef\abbrev@plexpn{\abbrev@sgexpn s}
  }{
    \def\abbrev@plexpn{#6}
  }

  % This code ensure that the arguments are expanded properly
  \begingroup\edef\z{\endgroup\noexpand\abbrev@create
  {\abbrev@sgcsname}{\abbrev@sgabbrev}{\abbrev@sgexpn}
  {\abbrev@plcsname}{\abbrev@plabbrev}{\abbrev@plexpn}}\z
}

%    \end{macrocode}
% \end{macro} ^^A \newfullabbrev
%
% \begin{macro}{\abbrev@create}
%   \changes{v1.1}{2017/05/16}{Allow explicit declaration of plural version}
%
%   The main worker meta-macro for creating the abbreviation macros is
%   implemented as follows.  It create a private toggle variable to
%   be used to distinguish the first time usage of the abbreviation.
%   The abbreviation is add to |abbrev@list| (for reseting
%   abbreviation macros later).  It then call |abbrev@init| to create
%   the initialisation macro, then call the initialisation macro
%   afterward.
%
% \iffalse^^A BEGIN Produce comments only in the resulting style file
%<*abbrev>

% Worker meta-macro to create abbreviation macros.
%
% Arguments:
% 1. (Singular) control sequence
% 2. (Singular) abbreviation
% 3. (Singular) expansion string.
% 4. (Plural) control sequence
% 5. (Plural) abbreviation
% 6. (Plural) expansion string.
%
% Usage:
% - will create
% macros \randd and \randds.
% - \abbrev@create{SME}{SME}{Small and Medium-sized Enterprise}{SMEs}{SMEs}{Small and Medium-sized Enterprises} will create
% macros \SME will expand as Small and Medium-sized Enterprise (SME)
% and \SMEs will expand as Small and Medium-sized Enterprises (SMEs).
% - \abbrev@create{randd}{R\&D}{Research and Development}{randds}{R\&Ds}{Research and Developments} will create
% macros \randd will expand as Research and Development (R\&D)
% and \randds will expand as Research and Developments (R\&Ds).
% - \abbrev@create{AS}{AS}{Autonomous System}{ASes}{ASes}{Autonomous Systems} will create
% macros \AS will expand as Autonomous System (AS) 
% and \ASes will expand as Autonomous Systems (ASes).
%</abbrev>
% \fi^^A END Produce comments only in the resulting style file
%    \begin{macrocode}
\newcommand{\abbrev@create}[6]{%
  \newtoggle{#1@toggle}
  \listadd{\abbrev@list}{#1}
  \abbrev@init{#1}{#2}{#3}{#4}{#5}{#6}
  \csuse{#1@init}
}

%    \end{macrocode}
% \end{macro} ^^A \abbrev@create
%
% \begin{macro}{\abbrev@init}
%   This macro create the initialisation meta-macro for creating the
%   abbreviation macros.
%    \begin{macrocode}
\newcommand{\abbrev@init}[6]{%
  \expandafter\def\csname#1@init\endcsname{%
    \togglefalse{#1@toggle}
    \expandafter\def\csname#1\endcsname{%
      \iftoggle{#1@toggle}{%
        #2%
      }{%
        \nomenclature{#2}{#3}%
        \toggletrue{#1@toggle}%
        #3 (#2)%
      }%
      \expandafter\def\csname#1\endcsname{#2\xspace}%
      \xspace%
    }

    \expandafter\def\csname#4\endcsname{%
      \iftoggle{#1@toggle}{%
        #5%
      }{%
        \nomenclature{#2}{#3}%
        \toggletrue{#1@toggle}%
        #6 (#5)%
      }%
      \expandafter\def\csname#4\endcsname{#5\xspace}%
      \xspace%
    }%
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\resetabbrev}
%   \changes{v1.1}{2017/05/16}{Added optional argument to reset individual abbreviation}
%   Reset the all abbreviation macros to full expansion mode by going
%   through |abbrev@list| and call the initialisation macro for each
%   abbreviation.  In the case where the optional argument is non-empty
%   only the corresponding abbreviation is reset.
% \iffalse^^A BEGIN Produce comments only in the resulting style file
%<*abbrev>

% Macro to reset all abbreviations or individual abbreviation if the optional 
% argument is set
%
% Arguments:
% - (Optional) abbreviation name
%
% Usage:
% - \resetabbrev will reset all abreviations.
% - \resetabbrev[SME] will reset \SME abbreviation.
%</abbrev>
% \fi^^A END Produce comments only in the resulting style file
%    \begin{macrocode}
\newcommand{\resetabbrev}[1][]{
  \expandafter\ifstrequal\expandafter{#1}{}{
    \renewcommand*{\do}[1]{
      \csuse{##1@init}
    }
    \dolistloop{\abbrev@list}
  }{
    \csuse{#1@init}
  }
}
%    \end{macrocode}
% \end{macro} ^^A \resetabbrev
%
% \Finale
\endinput